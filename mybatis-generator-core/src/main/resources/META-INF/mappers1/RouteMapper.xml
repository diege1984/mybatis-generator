<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wu.service.route1.dao.RouteMapper">
  <resultMap id="BaseResultMap" type="com.wu.service.route1.entity.Route">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="route_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="route_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="execute_class" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="execute_method" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="compensate_class" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="segment1" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_by" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="creation_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="last_updated_by" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="last_update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="void_flag" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="test_cloumn" javaType="java.lang.Byte" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    route_id, route_type, execute_class, execute_method, compensate_class, segment1, 
    created_by, creation_date, last_updated_by, last_update_date, void_flag, test_cloumn
  </sql>
  <select id="selectByExample" parameterType="com.wu.service.route1.entity.RouteExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from route_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MysqlDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from route_conf
    where route_id = #{routeId,jdbcType=VARCHAR}
  </select>
  <update id="logicDeleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_conf set void_flag = 0 
    where route_id = #{routeId,jdbcType=VARCHAR}
  </update>
  <delete id="physicalDeleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from route_conf
    where route_id = #{routeId,jdbcType=VARCHAR}
  </delete>
  <update id="logicDeleteByExample" parameterType="com.wu.service.route1.entity.RouteExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_conf set void_flag = 0 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <delete id="physicalDeleteByExample" parameterType="com.wu.service.route1.entity.RouteExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from route_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wu.service.route1.entity.Route">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into route_conf (route_id, route_type, execute_class, 
      execute_method, compensate_class, segment1, 
      created_by, creation_date, last_updated_by, 
      last_update_date, void_flag, test_cloumn
      )
    values (#{routeId,jdbcType=VARCHAR}, #{routeType,jdbcType=VARCHAR}, #{executeClass,jdbcType=VARCHAR}, 
      #{executeMethod,jdbcType=VARCHAR}, #{compensateClass,jdbcType=VARCHAR}, #{segment1,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=BIGINT}, #{creationDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=BIGINT}, 
      #{lastUpdateDate,jdbcType=TIMESTAMP}, #{voidFlag,jdbcType=TINYINT}, #{testCloumn,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wu.service.route1.entity.Route">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into route_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="routeId != null">
        route_id,
      </if>
      <if test="routeType != null">
        route_type,
      </if>
      <if test="executeClass != null">
        execute_class,
      </if>
      <if test="executeMethod != null">
        execute_method,
      </if>
      <if test="compensateClass != null">
        compensate_class,
      </if>
      <if test="segment1 != null">
        segment1,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="creationDate != null">
        creation_date,
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by,
      </if>
      <if test="lastUpdateDate != null">
        last_update_date,
      </if>
      <if test="voidFlag != null">
        void_flag,
      </if>
      <if test="testCloumn != null">
        test_cloumn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="routeId != null">
        #{routeId,jdbcType=VARCHAR},
      </if>
      <if test="routeType != null">
        #{routeType,jdbcType=VARCHAR},
      </if>
      <if test="executeClass != null">
        #{executeClass,jdbcType=VARCHAR},
      </if>
      <if test="executeMethod != null">
        #{executeMethod,jdbcType=VARCHAR},
      </if>
      <if test="compensateClass != null">
        #{compensateClass,jdbcType=VARCHAR},
      </if>
      <if test="segment1 != null">
        #{segment1,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        #{lastUpdatedBy,jdbcType=BIGINT},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="voidFlag != null">
        #{voidFlag,jdbcType=TINYINT},
      </if>
      <if test="testCloumn != null">
        #{testCloumn,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wu.service.route1.entity.RouteExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from route_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_conf
    <set>
      <if test="record.routeId != null">
        route_id = #{record.routeId,jdbcType=VARCHAR},
      </if>
      <if test="record.routeType != null">
        route_type = #{record.routeType,jdbcType=VARCHAR},
      </if>
      <if test="record.executeClass != null">
        execute_class = #{record.executeClass,jdbcType=VARCHAR},
      </if>
      <if test="record.executeMethod != null">
        execute_method = #{record.executeMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.compensateClass != null">
        compensate_class = #{record.compensateClass,jdbcType=VARCHAR},
      </if>
      <if test="record.segment1 != null">
        segment1 = #{record.segment1,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.creationDate != null">
        creation_date = #{record.creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdatedBy != null">
        last_updated_by = #{record.lastUpdatedBy,jdbcType=BIGINT},
      </if>
      <if test="record.lastUpdateDate != null">
        last_update_date = #{record.lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.voidFlag != null">
        void_flag = #{record.voidFlag,jdbcType=TINYINT},
      </if>
      <if test="record.testCloumn != null">
        test_cloumn = #{record.testCloumn,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_conf
    set route_id = #{record.routeId,jdbcType=VARCHAR},
      route_type = #{record.routeType,jdbcType=VARCHAR},
      execute_class = #{record.executeClass,jdbcType=VARCHAR},
      execute_method = #{record.executeMethod,jdbcType=VARCHAR},
      compensate_class = #{record.compensateClass,jdbcType=VARCHAR},
      segment1 = #{record.segment1,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      creation_date = #{record.creationDate,jdbcType=TIMESTAMP},
      last_updated_by = #{record.lastUpdatedBy,jdbcType=BIGINT},
      last_update_date = #{record.lastUpdateDate,jdbcType=TIMESTAMP},
      void_flag = #{record.voidFlag,jdbcType=TINYINT},
      test_cloumn = #{record.testCloumn,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wu.service.route1.entity.Route">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_conf
    <set>
      <if test="routeType != null">
        route_type = #{routeType,jdbcType=VARCHAR},
      </if>
      <if test="executeClass != null">
        execute_class = #{executeClass,jdbcType=VARCHAR},
      </if>
      <if test="executeMethod != null">
        execute_method = #{executeMethod,jdbcType=VARCHAR},
      </if>
      <if test="compensateClass != null">
        compensate_class = #{compensateClass,jdbcType=VARCHAR},
      </if>
      <if test="segment1 != null">
        segment1 = #{segment1,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by = #{lastUpdatedBy,jdbcType=BIGINT},
      </if>
      <if test="lastUpdateDate != null">
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="voidFlag != null">
        void_flag = #{voidFlag,jdbcType=TINYINT},
      </if>
      <if test="testCloumn != null">
        test_cloumn = #{testCloumn,jdbcType=TINYINT},
      </if>
    </set>
    where route_id = #{routeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wu.service.route1.entity.Route">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_conf
    set route_type = #{routeType,jdbcType=VARCHAR},
      execute_class = #{executeClass,jdbcType=VARCHAR},
      execute_method = #{executeMethod,jdbcType=VARCHAR},
      compensate_class = #{compensateClass,jdbcType=VARCHAR},
      segment1 = #{segment1,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=BIGINT},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      last_updated_by = #{lastUpdatedBy,jdbcType=BIGINT},
      last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      void_flag = #{voidFlag,jdbcType=TINYINT},
      test_cloumn = #{testCloumn,jdbcType=TINYINT}
    where route_id = #{routeId,jdbcType=VARCHAR}
  </update>
  <sql id="MysqlDialectSuffix">
    <if test="offset != null and limit != null">
      <![CDATA[ limit #{offset}, #{limit}]]>
    </if>
  </sql>
  <insert id="insertBatch" parameterType="com.wu.service.route1.entity.Route">
    insert into route_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      route_id,route_type,execute_class,execute_method,compensate_class,segment1,created_by,creation_date,last_updated_by,last_update_date,void_flag,test_cloumn,
    </trim>
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      <trim suffixOverrides=",">
        #{item.routeId,jdbcType=VARCHAR},#{item.routeType,jdbcType=VARCHAR},#{item.executeClass,jdbcType=VARCHAR},#{item.executeMethod,jdbcType=VARCHAR},#{item.compensateClass,jdbcType=VARCHAR},#{item.segment1,jdbcType=VARCHAR},#{item.createdBy,jdbcType=BIGINT},#{item.creationDate,jdbcType=TIMESTAMP},#{item.lastUpdatedBy,jdbcType=BIGINT},#{item.lastUpdateDate,jdbcType=TIMESTAMP},#{item.voidFlag,jdbcType=TINYINT},#{item.testCloumn,jdbcType=TINYINT},
      </trim>
      )
    </foreach>
  </insert>
</mapper>