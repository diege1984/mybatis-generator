<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wu.service.route1.dao.RouteDetailMapper">
  <resultMap id="BaseResultMap" type="com.wu.service.route1.entity.RouteDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="route_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <idArg column="route_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="route_text" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    route_id, route_name, route_text
  </sql>
  <select id="selectByExample" parameterType="com.wu.service.route1.entity.RouteDetailExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from route_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MysqlDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="com.wu.service.route1.entity.RouteDetailKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from route_dtl
    where route_id = #{routeId,jdbcType=VARCHAR}
      and route_name = #{routeName,jdbcType=VARCHAR}
  </select>
  <update id="logicDeleteByPrimaryKey" parameterType="com.wu.service.route1.entity.RouteDetailKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_dtl set void_flag = 0 
    where route_id = #{routeId,jdbcType=VARCHAR}
      and route_name = #{routeName,jdbcType=VARCHAR}
  </update>
  <delete id="physicalDeleteByPrimaryKey" parameterType="com.wu.service.route1.entity.RouteDetailKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from route_dtl
    where route_id = #{routeId,jdbcType=VARCHAR}
      and route_name = #{routeName,jdbcType=VARCHAR}
  </delete>
  <update id="logicDeleteByExample" parameterType="com.wu.service.route1.entity.RouteDetailExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_dtl set void_flag = 0 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <delete id="physicalDeleteByExample" parameterType="com.wu.service.route1.entity.RouteDetailExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from route_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wu.service.route1.entity.RouteDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into route_dtl (route_id, route_name, route_text
      )
    values (#{routeId,jdbcType=VARCHAR}, #{routeName,jdbcType=VARCHAR}, #{routeText,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wu.service.route1.entity.RouteDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into route_dtl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="routeId != null">
        route_id,
      </if>
      <if test="routeName != null">
        route_name,
      </if>
      <if test="routeText != null">
        route_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="routeId != null">
        #{routeId,jdbcType=VARCHAR},
      </if>
      <if test="routeName != null">
        #{routeName,jdbcType=VARCHAR},
      </if>
      <if test="routeText != null">
        #{routeText,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wu.service.route1.entity.RouteDetailExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from route_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_dtl
    <set>
      <if test="record.routeId != null">
        route_id = #{record.routeId,jdbcType=VARCHAR},
      </if>
      <if test="record.routeName != null">
        route_name = #{record.routeName,jdbcType=VARCHAR},
      </if>
      <if test="record.routeText != null">
        route_text = #{record.routeText,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_dtl
    set route_id = #{record.routeId,jdbcType=VARCHAR},
      route_name = #{record.routeName,jdbcType=VARCHAR},
      route_text = #{record.routeText,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wu.service.route1.entity.RouteDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_dtl
    <set>
      <if test="routeText != null">
        route_text = #{routeText,jdbcType=VARCHAR},
      </if>
    </set>
    where route_id = #{routeId,jdbcType=VARCHAR}
      and route_name = #{routeName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wu.service.route1.entity.RouteDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update route_dtl
    set route_text = #{routeText,jdbcType=VARCHAR}
    where route_id = #{routeId,jdbcType=VARCHAR}
      and route_name = #{routeName,jdbcType=VARCHAR}
  </update>
  <sql id="MysqlDialectSuffix">
    <if test="offset != null and limit != null">
      <![CDATA[ limit #{offset}, #{limit}]]>
    </if>
  </sql>
  <insert id="insertBatch" parameterType="com.wu.service.route1.entity.RouteDetail">
    insert into route_dtl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      route_id,route_name,route_text,
    </trim>
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      <trim suffixOverrides=",">
        #{item.routeId,jdbcType=VARCHAR},#{item.routeName,jdbcType=VARCHAR},#{item.routeText,jdbcType=VARCHAR},
      </trim>
      )
    </foreach>
  </insert>
</mapper>